{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\GitHub\\\\build-viewer\\\\frontend\\\\src\\\\components\\\\UploadV2.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container } from \"react-bootstrap\";\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\nimport nbt from '../nbt';\nimport View from './View';\nimport TexturePlane from './TexturePlane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Upload = function Upload() {\n  _s();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      scene = _React$useState2[0],\n      setScene = _React$useState2[1]; // handleUpload = (event) => {\n  //     console.log('Success!');\n  // }\n\n\n  function renderHandler() {\n    console.log('[RENDER] calling...');\n    console.log(scene);\n\n    if (scene.length == 0) {\n      console.log('[RENDER] Denied!');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Nothing is rendered..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    } else {\n      console.log('[RENDER] Working...');\n      console.log('[RENDER] Received planes:');\n      return /*#__PURE__*/_jsxDEV(View, {\n        top: scene\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  function blockStructure(palette, pValue) {\n    var BlockType = palette[pValue];\n\n    if (BlockType.Name.value == 'minecraft:air') {\n      return {\n        'name': '',\n        'cube': false\n      };\n    }\n\n    if (BlockType.Properties) {\n      return {\n        'name': BlockType.Name.value,\n        'cube': false,\n        'special': BlockType.Properties.value\n      };\n    } else {\n      return {\n        'name': BlockType.Name.value,\n        'cube': true\n      };\n    }\n  }\n\n  function findBlockIndex(start, end, dimension) {\n    return (end[2] - start[2]) * (dimension.x + 1) + (end[1] - start[1]) * (dimension.x + 1 * dimension.z + 1) + (end[0] - start[0]);\n  }\n\n  function parseNBT(input) {\n    console.log('Parsing...');\n    var dump = {\n      author: \"\",\n      dimension: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      blocks: [] //blocks[x][y][z]\n\n    };\n    var blocks = input.value.blocks.value.value; //First Pass (Grabs dimension of model in blocks)\n\n    var _iterator = _createForOfIteratorHelper(blocks),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var block = _step.value;\n        //The [ x, y, z ] Array\n        var blockArray = block.pos.value.value;\n\n        if (blockArray[0] > dump.dimension.x) {\n          dump.dimension.x = blockArray[0];\n        } //y\n\n\n        if (blockArray[1] > dump.dimension.y) {\n          dump.dimension.y = blockArray[1];\n        } //z\n\n\n        if (blockArray[2] > dump.dimension.z) {\n          dump.dimension.z = blockArray[2];\n        }\n      } //Dimensions found:\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    console.log(dump.dimension); //Sorts the blocks object a lil nicer\n\n    blocks.sort(function (a, b) {\n      return b.pos.value.value[1] - a.pos.value.value[1];\n    });\n    console.log(blocks[0]);\n    console.log(blocks[427]);\n    console.log(findBlockIndex([0, 10, 0], [7, 9, 13], dump.dimension));\n    console.log(dump.dimension);\n\n    var _iterator2 = _createForOfIteratorHelper(blocks.entries()),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {//  console.log(v.pos.value.value);\n\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            i = _step2$value[0],\n            v = _step2$value[1];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  function handleChange(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      console.log(e.target.result);\n      var x = nbt.parse(e.target.result, function (error, data) {\n        if (error) {\n          throw error;\n        }\n\n        console.log(data);\n        parseNBT(data);\n      });\n    };\n\n    reader.readAsArrayBuffer(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"Input NBT file : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 22\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }, _this), renderHandler()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Upload, \"bmJ6gNvzxsGCs/N2lxQta2axikk=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/src/components/UploadV2.js"],"names":["React","Container","NavbarToggle","nbt","View","TexturePlane","Upload","useState","scene","setScene","renderHandler","console","log","length","blockStructure","palette","pValue","BlockType","Name","value","Properties","findBlockIndex","start","end","dimension","x","z","parseNBT","input","dump","author","y","blocks","block","blockArray","pos","sort","a","b","entries","i","v","handleChange","event","file","target","files","reader","FileReader","onload","e","result","parse","error","data","readAsArrayBuffer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACjB,wBAA2BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA3B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAeC,QAAf,uBADiB,CAGjB;AACA;AACA;;;AAEA,WAASC,aAAT,GAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAEA,QAAGA,KAAK,CAACK,MAAN,IAAgB,CAAnB,EAAqB;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAPD,MAOO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,0BACE,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEJ;AAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AAGD,WAASM,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAwC;AACtC,QAAMC,SAAS,GAAGF,OAAO,CAACC,MAAD,CAAzB;;AAEA,QAAGC,SAAS,CAACC,IAAV,CAAeC,KAAf,IAAwB,eAA3B,EAA2C;AACzC,aAAO;AAAC,gBAAS,EAAV;AAAc,gBAAQ;AAAtB,OAAP;AACD;;AAED,QAAGF,SAAS,CAACG,UAAb,EAAwB;AAEtB,aAAO;AACL,gBAASH,SAAS,CAACC,IAAV,CAAeC,KADnB;AAEL,gBAAS,KAFJ;AAGL,mBAAYF,SAAS,CAACG,UAAV,CAAqBD;AAH5B,OAAP;AAMD,KARD,MAQO;AAEL,aAAO;AACL,gBAASF,SAAS,CAACC,IAAV,CAAeC,KADnB;AAEL,gBAAS;AAFJ,OAAP;AAKD;AACF;;AAED,WAASE,cAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+C;AAC7C,WACE,CAACD,GAAG,CAAC,CAAD,CAAH,GAAOD,KAAK,CAAC,CAAD,CAAb,KAAqBE,SAAS,CAACC,CAAV,GAAY,CAAjC,IACA,CAACF,GAAG,CAAC,CAAD,CAAH,GAAOD,KAAK,CAAC,CAAD,CAAb,KAAqBE,SAAS,CAACC,CAAV,GAAY,IAAID,SAAS,CAACE,CAA1B,GAA4B,CAAjD,CADA,IAECH,GAAG,CAAC,CAAD,CAAH,GAAOD,KAAK,CAAC,CAAD,CAFb,CADF;AAQD;;AAGD,WAASK,QAAT,CAAkBC,KAAlB,EAAyB;AACvBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAIiB,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,EADC;AAETN,MAAAA,SAAS,EAAE;AAACC,QAAAA,CAAC,EAAC,CAAH;AAAKM,QAAAA,CAAC,EAAC,CAAP;AAASL,QAAAA,CAAC,EAAC;AAAX,OAFF;AAGTM,MAAAA,MAAM,EAAE,EAHC,CAGE;;AAHF,KAAX;AAMA,QAAIA,MAAM,GAAGJ,KAAK,CAACT,KAAN,CAAYa,MAAZ,CAAmBb,KAAnB,CAAyBA,KAAtC,CATuB,CAWvB;;AAXuB,+CAYJa,MAZI;AAAA;;AAAA;AAYvB,0DAA0B;AAAA,YAAhBC,KAAgB;AACxB;AACA,YAAIC,UAAU,GAAGD,KAAK,CAACE,GAAN,CAAUhB,KAAV,CAAgBA,KAAjC;;AAEA,YAAGe,UAAU,CAAC,CAAD,CAAV,GAAgBL,IAAI,CAACL,SAAL,CAAeC,CAAlC,EAAoC;AAClCI,UAAAA,IAAI,CAACL,SAAL,CAAeC,CAAf,GAAmBS,UAAU,CAAC,CAAD,CAA7B;AACD,SANuB,CAOxB;;;AACA,YAAGA,UAAU,CAAC,CAAD,CAAV,GAAgBL,IAAI,CAACL,SAAL,CAAeO,CAAlC,EAAoC;AAClCF,UAAAA,IAAI,CAACL,SAAL,CAAeO,CAAf,GAAmBG,UAAU,CAAC,CAAD,CAA7B;AACD,SAVuB,CAWxB;;;AACA,YAAGA,UAAU,CAAC,CAAD,CAAV,GAAgBL,IAAI,CAACL,SAAL,CAAeE,CAAlC,EAAoC;AAClCG,UAAAA,IAAI,CAACL,SAAL,CAAeE,CAAf,GAAmBQ,UAAU,CAAC,CAAD,CAA7B;AACD;AAEF,OA5BsB,CA8BvB;;AA9BuB;AAAA;AAAA;AAAA;AAAA;;AA+BvBvB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACL,SAAjB,EA/BuB,CAkCvB;;AACAQ,IAAAA,MAAM,CAACI,IAAP,CACE,UAACC,CAAD,EAAGC,CAAH,EAAS;AACP,aAAOA,CAAC,CAACH,GAAF,CAAMhB,KAAN,CAAYA,KAAZ,CAAkB,CAAlB,IAAuBkB,CAAC,CAACF,GAAF,CAAMhB,KAAN,CAAYA,KAAZ,CAAkB,CAAlB,CAA9B;AACD,KAHH;AAKER,IAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAM,CAAC,CAAD,CAAlB;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAM,CAAC,GAAD,CAAlB;AACArB,IAAAA,OAAO,CAACC,GAAR,CACES,cAAc,CAAC,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAAD,EAAY,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,CAAZ,EAAuBQ,IAAI,CAACL,SAA5B,CADhB;AAGAb,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACL,SAAjB;;AA7CqB,gDA+CJQ,MAAM,CAACO,OAAP,EA/CI;AAAA;;AAAA;AA+CvB,6DAAqC,CACrC;;AADqC;AAAA,YAA1BC,CAA0B;AAAA,YAAxBC,CAAwB;AAGpC;AAlDsB;AAAA;AAAA;AAAA;AAAA;AAoDxB;;AAGD,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,CAAD,EAAO;AAEnBvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,CAAC,CAACL,MAAF,CAASM,MAArB;AAEA,UAAI1B,CAAC,GAAGtB,GAAG,CAACiD,KAAJ,CAAUF,CAAC,CAACL,MAAF,CAASM,MAAnB,EAA2B,UAASE,KAAT,EAAgBC,IAAhB,EAAsB;AACvD,YAAID,KAAJ,EAAW;AAAE,gBAAMA,KAAN;AAAc;;AAE3B1C,QAAAA,OAAO,CAACC,GAAR,CAAY0C,IAAZ;AACA3B,QAAAA,QAAQ,CAAC2B,IAAD,CAAR;AACH,OALS,CAAR;AAOH,KAXD;;AAYAP,IAAAA,MAAM,CAACQ,iBAAP,CAAyBX,IAAzB;AACH;;AAGH,sBACE,QAAC,SAAD;AAAA,iDACiB;AAAA;AAAA;AAAA;AAAA,aADjB,eAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,aAFA,EAGChC,aAAa,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CApJD;;GAAMJ,M;;KAAAA,M;AAsJN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport NavbarToggle from 'react-bootstrap/esm/NavbarToggle';\r\nimport nbt from '../nbt';\r\nimport View from './View';\r\nimport TexturePlane from './TexturePlane';\r\n\r\nconst Upload = () => {\r\n    const [scene , setScene] = React.useState([]);\r\n\r\n    // handleUpload = (event) => {\r\n    //     console.log('Success!');\r\n    // }\r\n\r\n    function renderHandler(){\r\n      console.log('[RENDER] calling...')\r\n      console.log(scene);\r\n\r\n      if(scene.length == 0){\r\n        console.log('[RENDER] Denied!')\r\n        return(\r\n          <div>\r\n            Nothing is rendered..\r\n          </div>\r\n        )\r\n      } else {\r\n        console.log('[RENDER] Working...')\r\n        console.log('[RENDER] Received planes:');\r\n\r\n        return (\r\n          <View top={scene}/>\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    function blockStructure(palette, pValue){\r\n      const BlockType = palette[pValue];\r\n\r\n      if(BlockType.Name.value == 'minecraft:air'){\r\n        return {'name' : '', 'cube': false};\r\n      }\r\n\r\n      if(BlockType.Properties){\r\n\r\n        return {\r\n          'name' : BlockType.Name.value,\r\n          'cube' : false,\r\n          'special' : BlockType.Properties.value\r\n        };\r\n\r\n      } else {\r\n\r\n        return {\r\n          'name' : BlockType.Name.value,\r\n          'cube' : true\r\n        };\r\n\r\n      }\r\n    }\r\n\r\n    function findBlockIndex(start, end, dimension) {\r\n      return (\r\n        (end[2]-start[2]) * (dimension.x+1) + \r\n        (end[1]-start[1]) * (dimension.x+1 * dimension.z+1) +\r\n        (end[0]-start[0]) \r\n      );\r\n\r\n\r\n\r\n    } \r\n\r\n\r\n    function parseNBT(input) {\r\n      console.log('Parsing...');\r\n\r\n      let dump = {\r\n        author: \"\",\r\n        dimension: {x:0,y:0,z:0}, \r\n        blocks: [] //blocks[x][y][z]\r\n      }\r\n\r\n      let blocks = input.value.blocks.value.value;\r\n\r\n      //First Pass (Grabs dimension of model in blocks)\r\n      for(const block of blocks){ \r\n        //The [ x, y, z ] Array\r\n        var blockArray = block.pos.value.value;\r\n\r\n        if(blockArray[0] > dump.dimension.x){\r\n          dump.dimension.x = blockArray[0]; \r\n        }\r\n        //y\r\n        if(blockArray[1] > dump.dimension.y){\r\n          dump.dimension.y = blockArray[1]; \r\n        }\r\n        //z\r\n        if(blockArray[2] > dump.dimension.z){\r\n          dump.dimension.z = blockArray[2]; \r\n        }\r\n\r\n      }\r\n\r\n      //Dimensions found:\r\n      console.log(dump.dimension);\r\n\r\n\r\n      //Sorts the blocks object a lil nicer\r\n      blocks.sort(\r\n        (a,b) => {\r\n          return b.pos.value.value[1] - a.pos.value.value[1]\r\n        });\r\n\r\n        console.log(blocks[0]);\r\n        console.log(blocks[427]);\r\n        console.log(\r\n          findBlockIndex([0,10,0] , [7,9,13] , dump.dimension)\r\n        );\r\n        console.log(dump.dimension);\r\n\r\n      for(const [i,v] of blocks.entries() ){\r\n      //  console.log(v.pos.value.value);\r\n        \r\n      }\r\n      \r\n    }\r\n\r\n    \r\n    function handleChange(event) {\r\n\r\n        const file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = (e) => {\r\n\r\n            console.log(e.target.result);\r\n\r\n            var x = nbt.parse(e.target.result, function(error, data) {\r\n              if (error) { throw error; }\r\n          \r\n              console.log(data);\r\n              parseNBT(data);\r\n          });\r\n\r\n        }\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n\r\n  return (\r\n    <Container>\r\n    Input NBT file : <br/>\r\n    <input type=\"file\" onChange={handleChange}></input>\r\n    {renderHandler()}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Upload"]},"metadata":{},"sourceType":"module"}