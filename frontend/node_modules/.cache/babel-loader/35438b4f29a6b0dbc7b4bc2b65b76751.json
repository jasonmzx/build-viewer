{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ImageUtils } from '../extras/ImageUtils.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nvar Source = /*#__PURE__*/function () {\n  function Source() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, Source);\n\n    this.uuid = MathUtils.generateUUID();\n    this.data = data;\n    this.version = 0;\n  }\n\n  _createClass(Source, [{\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.images[this.uuid] !== undefined) {\n        return meta.images[this.uuid];\n      }\n\n      var output = {\n        uuid: this.uuid,\n        url: ''\n      };\n      var data = this.data;\n\n      if (data !== null) {\n        var url;\n\n        if (Array.isArray(data)) {\n          // cube texture\n          url = [];\n\n          for (var i = 0, l = data.length; i < l; i++) {\n            if (data[i].isDataTexture) {\n              url.push(serializeImage(data[i].image));\n            } else {\n              url.push(serializeImage(data[i]));\n            }\n          }\n        } else {\n          // texture\n          url = serializeImage(data);\n        }\n\n        output.url = url;\n      }\n\n      if (!isRootObject) {\n        meta.images[this.uuid] = output;\n      }\n\n      return output;\n    }\n  }]);\n\n  return Source;\n}();\n\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n      return {\n        data: Array.prototype.slice.call(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\n\nSource.prototype.isSource = true;\nexport { Source };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three/src/textures/Source.js"],"names":["ImageUtils","MathUtils","Source","data","uuid","generateUUID","version","value","meta","isRootObject","undefined","images","output","url","Array","isArray","i","l","length","isDataTexture","push","serializeImage","image","HTMLImageElement","HTMLCanvasElement","ImageBitmap","getDataURL","prototype","slice","call","width","height","type","constructor","name","console","warn","isSource"],"mappings":"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","sourcesContent":["import { ImageUtils } from '../extras/ImageUtils.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nSource.prototype.isSource = true;\n\nexport { Source };\n"]},"metadata":{},"sourceType":"module"}