{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { createElementNS } from '../utils.js';\nimport { SRGBToLinear } from '../math/Color.js';\n\nvar _canvas;\n\nvar ImageUtils = /*#__PURE__*/function () {\n  function ImageUtils() {\n    _classCallCheck(this, ImageUtils);\n  }\n\n  _createClass(ImageUtils, null, [{\n    key: \"getDataURL\",\n    value: function getDataURL(image) {\n      if (/^data:/i.test(image.src)) {\n        return image.src;\n      }\n\n      if (typeof HTMLCanvasElement == 'undefined') {\n        return image.src;\n      }\n\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        if (_canvas === undefined) _canvas = createElementNS('canvas');\n        _canvas.width = image.width;\n        _canvas.height = image.height;\n\n        var context = _canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        canvas = _canvas;\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  }, {\n    key: \"sRGBToLinear\",\n    value: function sRGBToLinear(image) {\n      if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        var canvas = createElementNS('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height);\n        var imageData = context.getImageData(0, 0, image.width, image.height);\n        var data = imageData.data;\n\n        for (var i = 0; i < data.length; i++) {\n          data[i] = SRGBToLinear(data[i] / 255) * 255;\n        }\n\n        context.putImageData(imageData, 0, 0);\n        return canvas;\n      } else if (image.data) {\n        var _data = image.data.slice(0);\n\n        for (var _i = 0; _i < _data.length; _i++) {\n          if (_data instanceof Uint8Array || _data instanceof Uint8ClampedArray) {\n            _data[_i] = Math.floor(SRGBToLinear(_data[_i] / 255) * 255);\n          } else {\n            // assuming float\n            _data[_i] = SRGBToLinear(_data[_i]);\n          }\n        }\n\n        return {\n          data: _data,\n          width: image.width,\n          height: image.height\n        };\n      } else {\n        console.warn('THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.');\n        return image;\n      }\n    }\n  }]);\n\n  return ImageUtils;\n}();\n\nexport { ImageUtils };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three/src/extras/ImageUtils.js"],"names":["createElementNS","SRGBToLinear","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","undefined","width","height","context","getContext","ImageData","putImageData","drawImage","console","warn","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","i","length","slice","Uint8Array","Uint8ClampedArray","Math","floor"],"mappings":"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","sourcesContent":["import { createElementNS } from '../utils.js';\nimport { SRGBToLinear } from '../math/Color.js';\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nexport { ImageUtils };\n"]},"metadata":{},"sourceType":"module"}