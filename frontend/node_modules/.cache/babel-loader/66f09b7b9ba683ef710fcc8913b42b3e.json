{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport NodeMaterial from './NodeMaterial.js';\nimport { LineBasicMaterial } from 'three';\nvar defaultValues = new LineBasicMaterial();\n\nvar LineBasicNodeMaterial = /*#__PURE__*/function (_NodeMaterial) {\n  _inherits(LineBasicNodeMaterial, _NodeMaterial);\n\n  var _super = _createSuper(LineBasicNodeMaterial);\n\n  function LineBasicNodeMaterial(parameters) {\n    var _this;\n\n    _classCallCheck(this, LineBasicNodeMaterial);\n\n    _this = _super.call(this);\n    _this.colorNode = null;\n    _this.opacityNode = null;\n    _this.alphaTestNode = null;\n    _this.lightNode = null;\n    _this.positionNode = null;\n\n    _this.setDefaultValues(defaultValues);\n\n    _this.setValues(parameters);\n\n    return _this;\n  }\n\n  _createClass(LineBasicNodeMaterial, [{\n    key: \"copy\",\n    value: function copy(source) {\n      this.colorNode = source.colorNode;\n      this.opacityNode = source.opacityNode;\n      this.alphaTestNode = source.alphaTestNode;\n      this.lightNode = source.lightNode;\n      this.positionNode = source.positionNode;\n      return _get(_getPrototypeOf(LineBasicNodeMaterial.prototype), \"copy\", this).call(this, source);\n    }\n  }]);\n\n  return LineBasicNodeMaterial;\n}(NodeMaterial);\n\nLineBasicNodeMaterial.prototype.isLineBasicNodeMaterial = true;\nexport default LineBasicNodeMaterial;","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three-stdlib/nodes/materials/LineBasicNodeMaterial.js"],"names":["NodeMaterial","LineBasicMaterial","defaultValues","LineBasicNodeMaterial","parameters","colorNode","opacityNode","alphaTestNode","lightNode","positionNode","setDefaultValues","setValues","source","prototype","isLineBasicNodeMaterial"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,SAASC,iBAAT,QAAkC,OAAlC;AAEA,IAAMC,aAAa,GAAG,IAAID,iBAAJ,EAAtB;;IAEME,qB;;;;;AACJ,iCAAYC,UAAZ,EAAwB;AAAA;;AAAA;;AACtB;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,YAAL,GAAoB,IAApB;;AACA,UAAKC,gBAAL,CAAsBR,aAAtB;;AACA,UAAKS,SAAL,CAAeP,UAAf;;AARsB;AASvB;;;;WAED,cAAKQ,MAAL,EAAa;AACX,WAAKP,SAAL,GAAiBO,MAAM,CAACP,SAAxB;AACA,WAAKC,WAAL,GAAmBM,MAAM,CAACN,WAA1B;AACA,WAAKC,aAAL,GAAqBK,MAAM,CAACL,aAA5B;AACA,WAAKC,SAAL,GAAiBI,MAAM,CAACJ,SAAxB;AACA,WAAKC,YAAL,GAAoBG,MAAM,CAACH,YAA3B;AACA,6FAAkBG,MAAlB;AACD;;;;EAnBiCZ,Y;;AAuBpCG,qBAAqB,CAACU,SAAtB,CAAgCC,uBAAhC,GAA0D,IAA1D;AAEA,eAAeX,qBAAf","sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport { LineBasicMaterial } from 'three';\n\nconst defaultValues = new LineBasicMaterial();\n\nclass LineBasicNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.positionNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n\n}\n\nLineBasicNodeMaterial.prototype.isLineBasicNodeMaterial = true;\n\nexport default LineBasicNodeMaterial;\n"]},"metadata":{},"sourceType":"module"}