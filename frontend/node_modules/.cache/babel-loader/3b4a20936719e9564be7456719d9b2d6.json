{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nvar CubeTextureNode = /*#__PURE__*/function (_TextureNode) {\n  _inherits(CubeTextureNode, _TextureNode);\n\n  var _super = _createSuper(CubeTextureNode);\n\n  function CubeTextureNode(value) {\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ReflectNode();\n    var biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, CubeTextureNode);\n\n    return _super.call(this, value, uvNode, biasNode);\n  }\n\n  _createClass(CubeTextureNode, [{\n    key: \"getInputType\",\n    value: function getInputType() {\n      return 'cubeTexture';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var texture = this.value;\n\n      if (!texture || texture.isCubeTexture !== true) {\n        throw new Error('CubeTextureNode: Need a three.js cube texture.');\n      }\n\n      var textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n      if (output === 'sampler') {\n        return textureProperty + '_sampler';\n      } else if (builder.isReference(output)) {\n        return textureProperty;\n      } else {\n        var nodeData = builder.getDataFromNode(this);\n        var snippet = nodeData.snippet;\n\n        if (snippet === undefined) {\n          var uvSnippet = this.uvNode.build(builder, 'vec3');\n          var biasNode = this.biasNode;\n\n          if (biasNode !== null) {\n            var biasSnippet = biasNode.build(builder, 'float');\n            snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n          } else {\n            snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n          }\n\n          nodeData.snippet = snippet;\n        }\n\n        return builder.format(snippet, 'vec4', output);\n      }\n    }\n  }]);\n\n  return CubeTextureNode;\n}(TextureNode);\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three-stdlib/nodes/accessors/CubeTextureNode.js"],"names":["TextureNode","UniformNode","ReflectNode","CubeTextureNode","value","uvNode","biasNode","builder","output","texture","isCubeTexture","Error","textureProperty","prototype","generate","call","isReference","nodeData","getDataFromNode","snippet","undefined","uvSnippet","build","biasSnippet","getCubeTextureBias","getCubeTexture","format","isCubeTextureNode"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAgE;AAAA,QAA7CC,MAA6C,uEAApC,IAAIH,WAAJ,EAAoC;AAAA,QAAjBI,QAAiB,uEAAN,IAAM;;AAAA;;AAAA,6BACxDF,KADwD,EACjDC,MADiD,EACzCC,QADyC;AAE/D;;;;WAED,wBAAe;AACb,aAAO,aAAP;AACD;;;WAED,kBAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACxB,UAAMC,OAAO,GAAG,KAAKL,KAArB;;AAEA,UAAI,CAACK,OAAD,IAAYA,OAAO,CAACC,aAAR,KAA0B,IAA1C,EAAgD;AAC9C,cAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,UAAMC,eAAe,GAAGX,WAAW,CAACY,SAAZ,CAAsBC,QAAtB,CAA+BC,IAA/B,CAAoC,IAApC,EAA0CR,OAA1C,EAAmD,aAAnD,CAAxB;;AAEA,UAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,eAAOI,eAAe,GAAG,UAAzB;AACD,OAFD,MAEO,IAAIL,OAAO,CAACS,WAAR,CAAoBR,MAApB,CAAJ,EAAiC;AACtC,eAAOI,eAAP;AACD,OAFM,MAEA;AACL,YAAMK,QAAQ,GAAGV,OAAO,CAACW,eAAR,CAAwB,IAAxB,CAAjB;AACA,YAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAvB;;AAEA,YAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzB,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,KAAZ,CAAkBf,OAAlB,EAA2B,MAA3B,CAAlB;AACA,cAAMD,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,cAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,gBAAMiB,WAAW,GAAGjB,QAAQ,CAACgB,KAAT,CAAef,OAAf,EAAwB,OAAxB,CAApB;AACAY,YAAAA,OAAO,GAAGZ,OAAO,CAACiB,kBAAR,CAA2BZ,eAA3B,EAA4CS,SAA5C,EAAuDE,WAAvD,CAAV;AACD,WAHD,MAGO;AACLJ,YAAAA,OAAO,GAAGZ,OAAO,CAACkB,cAAR,CAAuBb,eAAvB,EAAwCS,SAAxC,CAAV;AACD;;AAEDJ,UAAAA,QAAQ,CAACE,OAAT,GAAmBA,OAAnB;AACD;;AAED,eAAOZ,OAAO,CAACmB,MAAR,CAAeP,OAAf,EAAwB,MAAxB,EAAgCX,MAAhC,CAAP;AACD;AACF;;;;EA1C2BR,W;;AA8C9BG,eAAe,CAACU,SAAhB,CAA0Bc,iBAA1B,GAA8C,IAA9C;AAEA,eAAexB,eAAf","sourcesContent":["import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value, uvNode = new ReflectNode(), biasNode = null) {\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\n\nexport default CubeTextureNode;\n"]},"metadata":{},"sourceType":"module"}