{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"weight\", \"transform\", \"instances\", \"mesh\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { Vector3, Color, Object3D } from 'three';\n\nvar Sampler = function Sampler(_ref) {\n  var children = _ref.children,\n      weight = _ref.weight,\n      transform = _ref.transform,\n      instances = _ref.instances,\n      mesh = _ref.mesh,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var group = React.useRef(null);\n  var instancedRef = React.useRef(null);\n  var meshToSampleRef = React.useRef(null);\n  React.useEffect(function () {\n    var _instances$current, _mesh$current;\n\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(function (c) {\n      return c.hasOwnProperty('instanceMatrix');\n    });\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(function (c) {\n      return c.type === 'Mesh';\n    });\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  React.useEffect(function () {\n    if (typeof meshToSampleRef.current === 'undefined') return;\n    if (typeof instancedRef.current === 'undefined') return;\n    var sampler = new MeshSurfaceSampler(meshToSampleRef.current);\n\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n\n    sampler.build();\n    var position = new Vector3();\n    var normal = new Vector3();\n    var color = new Color();\n    var dummy = new Object3D();\n    meshToSampleRef.current.updateMatrixWorld(true);\n\n    for (var i = 0; i < instancedRef.current.count; i++) {\n      sampler.sample(position, normal, color);\n\n      if (typeof transform === 'function') {\n        transform({\n          dummy: dummy,\n          sampledMesh: meshToSampleRef.current,\n          position: position,\n          normal: normal,\n          color: color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n\n      dummy.updateMatrix();\n      instancedRef.current.setMatrixAt(i, dummy.matrix);\n    }\n\n    instancedRef.current.instanceMatrix.needsUpdate = true;\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n};\n\nexport { Sampler };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/@react-three/drei/core/Sampler.js"],"names":["_extends","React","MeshSurfaceSampler","Vector3","Color","Object3D","Sampler","children","weight","transform","instances","mesh","props","group","useRef","instancedRef","meshToSampleRef","useEffect","_instances$current","_mesh$current","current","find","c","hasOwnProperty","type","sampler","setWeightAttribute","build","position","normal","color","dummy","updateMatrixWorld","i","count","sample","sampledMesh","copy","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","createElement","ref"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { Vector3, Color, Object3D } from 'three';\n\nconst Sampler = ({\n  children,\n  weight,\n  transform,\n  instances,\n  mesh,\n  ...props\n}) => {\n  const group = React.useRef(null);\n  const instancedRef = React.useRef(null);\n  const meshToSampleRef = React.useRef(null);\n  React.useEffect(() => {\n    var _instances$current, _mesh$current;\n\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  React.useEffect(() => {\n    if (typeof meshToSampleRef.current === 'undefined') return;\n    if (typeof instancedRef.current === 'undefined') return;\n    const sampler = new MeshSurfaceSampler(meshToSampleRef.current);\n\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n\n    sampler.build();\n    const position = new Vector3();\n    const normal = new Vector3();\n    const color = new Color();\n    const dummy = new Object3D();\n    meshToSampleRef.current.updateMatrixWorld(true);\n\n    for (let i = 0; i < instancedRef.current.count; i++) {\n      sampler.sample(position, normal, color);\n\n      if (typeof transform === 'function') {\n        transform({\n          dummy,\n          sampledMesh: meshToSampleRef.current,\n          position,\n          normal,\n          color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n\n      dummy.updateMatrix();\n      instancedRef.current.setMatrixAt(i, dummy.matrix);\n    }\n\n    instancedRef.current.instanceMatrix.needsUpdate = true;\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n};\n\nexport { Sampler };\n"]},"metadata":{},"sourceType":"module"}