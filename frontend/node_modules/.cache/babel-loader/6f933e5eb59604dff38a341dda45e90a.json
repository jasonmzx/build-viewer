{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport 'three';\n\nvar NodeMaterialLoaderUtils = /*#__PURE__*/function () {\n  function NodeMaterialLoaderUtils() {\n    _classCallCheck(this, NodeMaterialLoaderUtils);\n  }\n\n  _createClass(NodeMaterialLoaderUtils, null, [{\n    key: \"replaceUUIDObject\",\n    value: function replaceUUIDObject(object, uuid, value, recursive) {\n      recursive = recursive !== undefined ? recursive : true;\n      if (typeof uuid === 'object') uuid = uuid.uuid;\n\n      if (typeof object === 'object') {\n        var keys = Object.keys(object);\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n\n          if (recursive) {\n            object[key] = this.replaceUUIDObject(object[key], uuid, value);\n          }\n\n          if (key === uuid) {\n            object[uuid] = object[key];\n            delete object[key];\n          }\n        }\n      }\n\n      return object === uuid ? value : object;\n    }\n  }, {\n    key: \"replaceUUID\",\n    value: function replaceUUID(json, uuid, value) {\n      this.replaceUUIDObject(json, uuid, value, false);\n      this.replaceUUIDObject(json.nodes, uuid, value);\n      this.replaceUUIDObject(json.materials, uuid, value);\n      this.replaceUUIDObject(json.passes, uuid, value);\n      this.replaceUUIDObject(json.library, uuid, value, false);\n      return json;\n    }\n  }]);\n\n  return NodeMaterialLoaderUtils;\n}();\n\nexport { NodeMaterialLoaderUtils };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three-stdlib/loaders/NodeMaterialLoader.js"],"names":["NodeMaterialLoaderUtils","object","uuid","value","recursive","undefined","keys","Object","i","length","key","replaceUUIDObject","json","nodes","materials","passes","library"],"mappings":";;AAAA,OAAO,OAAP;;IAEMA,uB;;;;;;;WACJ,2BAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,SAA9C,EAAyD;AACvDA,MAAAA,SAAS,GAAGA,SAAS,KAAKC,SAAd,GAA0BD,SAA1B,GAAsC,IAAlD;AACA,UAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8BA,IAAI,GAAGA,IAAI,CAACA,IAAZ;;AAE9B,UAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAMK,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,MAAZ,CAAb;;AAEA,aAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAME,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAhB;;AAEA,cAAIJ,SAAJ,EAAe;AACbH,YAAAA,MAAM,CAACS,GAAD,CAAN,GAAc,KAAKC,iBAAL,CAAuBV,MAAM,CAACS,GAAD,CAA7B,EAAoCR,IAApC,EAA0CC,KAA1C,CAAd;AACD;;AAED,cAAIO,GAAG,KAAKR,IAAZ,EAAkB;AAChBD,YAAAA,MAAM,CAACC,IAAD,CAAN,GAAeD,MAAM,CAACS,GAAD,CAArB;AACA,mBAAOT,MAAM,CAACS,GAAD,CAAb;AACD;AACF;AACF;;AAED,aAAOT,MAAM,KAAKC,IAAX,GAAkBC,KAAlB,GAA0BF,MAAjC;AACD;;;WAED,qBAAmBW,IAAnB,EAAyBV,IAAzB,EAA+BC,KAA/B,EAAsC;AACpC,WAAKQ,iBAAL,CAAuBC,IAAvB,EAA6BV,IAA7B,EAAmCC,KAAnC,EAA0C,KAA1C;AACA,WAAKQ,iBAAL,CAAuBC,IAAI,CAACC,KAA5B,EAAmCX,IAAnC,EAAyCC,KAAzC;AACA,WAAKQ,iBAAL,CAAuBC,IAAI,CAACE,SAA5B,EAAuCZ,IAAvC,EAA6CC,KAA7C;AACA,WAAKQ,iBAAL,CAAuBC,IAAI,CAACG,MAA5B,EAAoCb,IAApC,EAA0CC,KAA1C;AACA,WAAKQ,iBAAL,CAAuBC,IAAI,CAACI,OAA5B,EAAqCd,IAArC,EAA2CC,KAA3C,EAAkD,KAAlD;AACA,aAAOS,IAAP;AACD;;;;;;AAIH,SAASZ,uBAAT","sourcesContent":["import 'three';\n\nclass NodeMaterialLoaderUtils {\n  static replaceUUIDObject(object, uuid, value, recursive) {\n    recursive = recursive !== undefined ? recursive : true;\n    if (typeof uuid === 'object') uuid = uuid.uuid;\n\n    if (typeof object === 'object') {\n      const keys = Object.keys(object);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (recursive) {\n          object[key] = this.replaceUUIDObject(object[key], uuid, value);\n        }\n\n        if (key === uuid) {\n          object[uuid] = object[key];\n          delete object[key];\n        }\n      }\n    }\n\n    return object === uuid ? value : object;\n  }\n\n  static replaceUUID(json, uuid, value) {\n    this.replaceUUIDObject(json, uuid, value, false);\n    this.replaceUUIDObject(json.nodes, uuid, value);\n    this.replaceUUIDObject(json.materials, uuid, value);\n    this.replaceUUIDObject(json.passes, uuid, value);\n    this.replaceUUIDObject(json.library, uuid, value, false);\n    return json;\n  }\n\n}\n\nexport { NodeMaterialLoaderUtils };\n"]},"metadata":{},"sourceType":"module"}