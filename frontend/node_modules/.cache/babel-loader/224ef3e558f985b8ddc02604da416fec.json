{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\GitHub\\\\build-viewer\\\\frontend\\\\src\\\\components\\\\View.js\",\n    _this = this;\n\nimport React, { Suspense, useMemo } from 'react';\nimport Input from 'react-bootstrap/InputGroup';\nimport * as THREE from 'three';\nimport { Canvas, useLoader } from \"@react-three/fiber\";\nimport { OrbitControls, softShadows } from \"@react-three/drei\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport { Container } from \"react-bootstrap\";\nimport Box from './Box';\nimport TexturePlane from './TexturePlane';\nimport DisplayPlane from './DisplayPlane';\nimport texture from '../images/blocks/stone.png';\nimport { BufferAttribute, MeshBasicMaterial, MeshStandardMaterial } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nsoftShadows();\n\nvar View = function View(props) {\n  var textureMap = new THREE.TextureLoader().load(texture);\n  var vertices = new Float32Array([-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0]);\n  var color_vertices = new Float32Array([1.0, 1.0, 0.0, 1, 1.0, 1.0, 0.5, 1, 1.0, 0.0, 1.0, 1, 1.0, 1.0, 0.0, 1, 1.0, 0.5, 0.0, 1, 1.0, 0.0, 1.0, 1, 1.0, 1.0, 0.0, 1, 1.0, 0.5, 0.0, 1, 1.0, 0.0, 1.0, 1]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      style: {\n        position: \"relative\",\n        width: 750,\n        height: 750\n      },\n      gl: {\n        antialias: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        castShadow: true,\n        position: [9, 9, 9],\n        intensity: 1.9,\n        \"shadow-mapSize-width\": 1024,\n        \"shadow-mapSize-height\": 1024,\n        \"shadow-camera-far\": 100,\n        \"shadow-camera-left\": -15,\n        \"shadow-camera-right\": 15,\n        \"shadow-camera-top\": 20,\n        \"shadow-camera-bottom\": -10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        enableZoom: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n          castShadow: true,\n          receiveShadow: true,\n          position: [1, 1, 1],\n          children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n            attach: \"geometry\",\n            children: [/*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n              attachObject: ['attributes', 'position'],\n              array: vertices,\n              itemSize: 3,\n              count: 9,\n              computeVertexNormals: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n              attachObject: ['attributes', 'rgba'],\n              array: color_vertices,\n              itemSize: 4,\n              count: 9\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n            attach: \"material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          castShadow: true,\n          receiveShadow: true,\n          position: [1.5, 2, 2],\n          children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n            attach: \"geometry\",\n            children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n              attachObject: ['attributes', 'position'],\n              array: vertices,\n              itemSize: 3,\n              count: 9,\n              computeVertexNormals: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 7\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n            attach: \"material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(DisplayPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }, _this);\n};\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/src/components/View.js"],"names":["React","Suspense","useMemo","Input","THREE","Canvas","useLoader","OrbitControls","softShadows","TextureLoader","Container","Box","TexturePlane","DisplayPlane","texture","BufferAttribute","MeshBasicMaterial","MeshStandardMaterial","View","props","textureMap","load","vertices","Float32Array","color_vertices","position","width","height","antialias"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAiC,oBAAjC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AAGA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,oBAA7C,QAAyE,OAAzE;;AAEAT,WAAW;;AAEX,IAAMU,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAEtB,MAAMC,UAAU,GAAG,IAAIhB,KAAK,CAACK,aAAV,GAA0BY,IAA1B,CAA+BP,OAA/B,CAAnB;AAEA,MAAMQ,QAAQ,GAAG,IAAIC,YAAJ,CAAkB,CACjC,CAAC,GADgC,EAC3B,CAAC,GAD0B,EACpB,GADoB,EAEhC,GAFgC,EAE3B,CAAC,GAF0B,EAEpB,GAFoB,EAGhC,GAHgC,EAG1B,GAH0B,EAGpB,GAHoB,EAKhC,GALgC,EAK1B,GAL0B,EAKpB,GALoB,EAMjC,CAAC,GANgC,EAM1B,GAN0B,EAMpB,GANoB,EAOjC,CAAC,GAPgC,EAO3B,CAAC,GAP0B,EAOpB,GAPoB,EASjC,GATiC,EAS3B,GAT2B,EASrB,GATqB,EAUjC,GAViC,EAU5B,CAAC,GAV2B,EAUrB,GAVqB,EAWjC,CAAC,GAXgC,EAW3B,CAAC,GAX0B,EAWpB,GAXoB,CAAlB,CAAjB;AAgBA,MAAMC,cAAc,GAAG,IAAID,YAAJ,CAAiB,CACtC,GADsC,EAChC,GADgC,EAC1B,GAD0B,EACrB,CADqB,EAEtC,GAFsC,EAEhC,GAFgC,EAE1B,GAF0B,EAErB,CAFqB,EAGtC,GAHsC,EAGhC,GAHgC,EAG1B,GAH0B,EAGrB,CAHqB,EAKtC,GALsC,EAKhC,GALgC,EAK1B,GAL0B,EAKrB,CALqB,EAMtC,GANsC,EAMhC,GANgC,EAM1B,GAN0B,EAMrB,CANqB,EAOtC,GAPsC,EAOhC,GAPgC,EAO1B,GAP0B,EAOrB,CAPqB,EAStC,GATsC,EAShC,GATgC,EAS1B,GAT0B,EASrB,CATqB,EAUtC,GAVsC,EAUhC,GAVgC,EAU1B,GAV0B,EAUrB,CAVqB,EAWtC,GAXsC,EAWhC,GAXgC,EAW1B,GAX0B,EAWrB,CAXqB,CAAjB,CAAvB;AAcA,sBAEF,QAAC,SAAD;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,KAAK,EAAE,GAA/B;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAvB;AAA2E,MAAA,EAAE,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA/E;AAAA,8BACA;AAAc,QAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,eADA,eAGA;AACA,QAAA,UAAU,MADV;AAEA,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFV;AAGA,QAAA,SAAS,EAAE,GAHX;AAIA,gCAAsB,IAJtB;AAKA,iCAAuB,IALvB;AAMA,6BAAmB,GANnB;AAOA,8BAAoB,CAAC,EAPrB;AAQA,+BAAqB,EARrB;AASA,6BAAmB,EATnB;AAUA,gCAAsB,CAAC;AAVvB;AAAA;AAAA;AAAA;AAAA,eAHA,eAiBA,QAAC,aAAD;AAAe,QAAA,UAAU,EAAI;AAA7B;AAAA;AAAA;AAAA;AAAA,eAjBA,eAkBA,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAAA,gCAKE;AAAM,UAAA,UAAU,MAAhB;AAAiB,UAAA,aAAa,MAA9B;AAA+B,UAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAzC;AAAA,kCACA;AAAgB,YAAA,MAAM,EAAC,UAAvB;AAAA,oCACE;AAAiB,cAAA,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,CAA/B;AACA,cAAA,KAAK,EAAEN,QADP;AAEA,cAAA,QAAQ,EAAE,CAFV;AAGA,cAAA,KAAK,EAAE,CAHP;AAIA,cAAA,oBAAoB,EAAC;AAJrB;AAAA;AAAA;AAAA;AAAA,qBADF,eAOE;AAAiB,cAAA,YAAY,EAAE,CAAC,YAAD,EAAe,MAAf,CAA/B;AACA,cAAA,KAAK,EAAEE,cADP;AAEA,cAAA,QAAQ,EAAE,CAFV;AAGA,cAAA,KAAK,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA,qBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAgBA;AAAgB,YAAA,MAAM,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,mBAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAwBE;AAAM,UAAA,UAAU,MAAhB;AAAiB,UAAA,aAAa,MAA9B;AAA+B,UAAA,QAAQ,EAAE,CAAC,GAAD,EAAK,CAAL,EAAO,CAAP,CAAzC;AAAA,kCACA;AAAgB,YAAA,MAAM,EAAC,UAAvB;AAAA,mCACE;AAAiB,cAAA,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,CAA/B;AACA,cAAA,KAAK,EAAEF,QADP;AAEA,cAAA,QAAQ,EAAE,CAFV;AAGA,cAAA,KAAK,EAAE,CAHP;AAIA,cAAA,oBAAoB,EAAC;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADA,eAUA;AAAgB,YAAA,MAAM,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,mBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBF,eA2CE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WAFE;AAqEC,CAvGH;;KAAMJ,I;AAyGN,eAAeA,IAAf","sourcesContent":["import React, { Suspense, useMemo } from 'react'\r\nimport Input from 'react-bootstrap/InputGroup'\r\n\r\nimport * as THREE from 'three'\r\nimport { Canvas, useLoader} from \"@react-three/fiber\";\r\nimport { OrbitControls, softShadows } from \"@react-three/drei\";\r\n\r\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\r\n\r\n\r\nimport {Container} from \"react-bootstrap\";\r\nimport Box from './Box';\r\nimport TexturePlane from './TexturePlane';\r\nimport DisplayPlane from './DisplayPlane';\r\nimport texture from '../images/blocks/stone.png';\r\nimport { BufferAttribute, MeshBasicMaterial, MeshStandardMaterial } from 'three';\r\n\r\nsoftShadows()\r\n\r\nconst View = (props) => {\r\n\r\n  const textureMap = new THREE.TextureLoader().load(texture);\r\n\r\n  const vertices = new Float32Array( [\r\n    -1.0, -1.0,  1.0,\r\n     1.0, -1.0,  1.0,\r\n     1.0,  1.0,  1.0,\r\n\r\n     1.0,  1.0,  1.0,\r\n    -1.0,  1.0,  1.0,\r\n    -1.0, -1.0,  1.0,\r\n\r\n    1.0,  1.0,  1.0,\r\n    1.0, -1.0,  1.0,\r\n    -1.0, -1.0,  1.0,\r\n] );\r\n\r\n\r\n\r\n  const color_vertices = new Float32Array([\r\n    1.0 , 1.0 , 0.0 ,1,\r\n    1.0 , 1.0 , 0.5 ,1, \r\n    1.0 , 0.0 , 1.0 ,1,\r\n\r\n    1.0 , 1.0 , 0.0 ,1,\r\n    1.0 , 0.5 , 0.0 ,1, \r\n    1.0 , 0.0 , 1.0 ,1,\r\n        \r\n    1.0 , 1.0 , 0.0 ,1,\r\n    1.0 , 0.5 , 0.0 ,1, \r\n    1.0 , 0.0 , 1.0 ,1,\r\n  ]);\r\n\r\n  return (\r\n\r\n<Container>\r\n  <Canvas shadows style={{ position: \"relative\", width: 750, height: 750 }}  gl={{ antialias: false }}>\r\n  <ambientLight intensity={0.9} />\r\n\r\n  <directionalLight \r\n  castShadow\r\n  position={[9, 9, 9]} \r\n  intensity={1.9}  \r\n  shadow-mapSize-width={1024}\r\n  shadow-mapSize-height={1024}\r\n  shadow-camera-far={100}\r\n  shadow-camera-left={-15}\r\n  shadow-camera-right={15}\r\n  shadow-camera-top={20}\r\n  shadow-camera-bottom={-10}\r\n\r\n  />\r\n\r\n  <OrbitControls enableZoom = {true} />\r\n  <Suspense fallback={null}>\r\n\r\n    {/*Generate scene here: */}\r\n    {/*bottom: */}\r\n\r\n    <mesh castShadow receiveShadow position={[1,1,1]}>\r\n    <bufferGeometry attach=\"geometry\" >\r\n      <bufferAttribute attachObject={['attributes', 'position']} \r\n      array={vertices}\r\n      itemSize={3}\r\n      count={9}\r\n      computeVertexNormals=\"true\"\r\n      />\r\n      <bufferAttribute attachObject={['attributes', 'rgba']}\r\n      array={color_vertices}\r\n      itemSize={4}\r\n      count={9}\r\n\r\n      />\r\n    </bufferGeometry>\r\n    {/* <meshStandardMaterial attach=\"material\" color=\"green\"  /> */}\r\n    <shaderMaterial attach=\"material\"/>\r\n    </mesh>\r\n\r\n    <mesh castShadow receiveShadow position={[1.5,2,2]}>\r\n    <bufferGeometry attach=\"geometry\" >\r\n      <bufferAttribute attachObject={['attributes', 'position']}\r\n      array={vertices}\r\n      itemSize={3}\r\n      count={9}\r\n      computeVertexNormals=\"true\"\r\n      />\r\n    </bufferGeometry>\r\n    {/* <meshStandardMaterial attach=\"material\" color=\"green\"  /> */}\r\n    <shaderMaterial attach=\"material\" \r\n      />\r\n    </mesh>\r\n\r\n    \r\n\r\n    {/* top */}\r\n\r\n\r\n    <DisplayPlane/>\r\n\r\n    </Suspense>\r\n  </Canvas>\r\n</Container>\r\n);}\r\n\r\nexport default View"]},"metadata":{},"sourceType":"module"}