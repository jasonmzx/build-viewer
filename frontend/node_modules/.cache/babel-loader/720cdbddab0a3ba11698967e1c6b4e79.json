{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from './Node.js';\n\nvar BypassNode = /*#__PURE__*/function (_Node) {\n  _inherits(BypassNode, _Node);\n\n  var _super = _createSuper(BypassNode);\n\n  function BypassNode(returnNode, callNode) {\n    var _this;\n\n    _classCallCheck(this, BypassNode);\n\n    _this = _super.call(this);\n    _this.outputNode = returnNode;\n    _this.callNode = callNode;\n    return _this;\n  }\n\n  _createClass(BypassNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.outputNode.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var snippet = this.callNode.build(builder, 'void');\n\n      if (snippet !== '') {\n        builder.addFlowCode(snippet);\n      }\n\n      return this.outputNode.build(builder, output);\n    }\n  }]);\n\n  return BypassNode;\n}(Node);\n\nBypassNode.prototype.isBypassNode = true;\nexport default BypassNode;","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three-stdlib/nodes/core/BypassNode.js"],"names":["Node","BypassNode","returnNode","callNode","outputNode","builder","getNodeType","output","snippet","build","addFlowCode","prototype","isBypassNode"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;IAEMC,U;;;;;AACJ,sBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAAA;;AAChC;AACA,UAAKC,UAAL,GAAkBF,UAAlB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AAHgC;AAIjC;;;;WAED,qBAAYE,OAAZ,EAAqB;AACnB,aAAO,KAAKD,UAAL,CAAgBE,WAAhB,CAA4BD,OAA5B,CAAP;AACD;;;WAED,kBAASA,OAAT,EAAkBE,MAAlB,EAA0B;AACxB,UAAMC,OAAO,GAAG,KAAKL,QAAL,CAAcM,KAAd,CAAoBJ,OAApB,EAA6B,MAA7B,CAAhB;;AAEA,UAAIG,OAAO,KAAK,EAAhB,EAAoB;AAClBH,QAAAA,OAAO,CAACK,WAAR,CAAoBF,OAApB;AACD;;AAED,aAAO,KAAKJ,UAAL,CAAgBK,KAAhB,CAAsBJ,OAAtB,EAA+BE,MAA/B,CAAP;AACD;;;;EAnBsBP,I;;AAuBzBC,UAAU,CAACU,SAAX,CAAqBC,YAArB,GAAoC,IAApC;AAEA,eAAeX,UAAf","sourcesContent":["import Node from './Node.js';\n\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n\n    return this.outputNode.build(builder, output);\n  }\n\n}\n\nBypassNode.prototype.isBypassNode = true;\n\nexport default BypassNode;\n"]},"metadata":{},"sourceType":"module"}