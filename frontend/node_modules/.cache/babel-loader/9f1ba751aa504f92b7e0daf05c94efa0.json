{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher } from '../core/EventDispatcher.js';\nimport { MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, LinearEncoding, UnsignedByteType, RGBAFormat, LinearMipmapLinearFilter, LinearFilter, UVMapping } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Source } from './Source.js';\nvar textureId = 0;\n\nvar Texture = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(Texture, _EventDispatcher);\n\n  var _super = _createSuper(Texture);\n\n  function Texture() {\n    var _this;\n\n    var image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    var mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    var wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    var wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    var magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    var minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    var format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    var type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    var anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n    var encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n\n    _classCallCheck(this, Texture);\n\n    _this = _super.call(this);\n    Object.defineProperty(_assertThisInitialized(_this), 'id', {\n      value: textureId++\n    });\n    _this.uuid = MathUtils.generateUUID();\n    _this.name = '';\n    _this.source = new Source(image);\n    _this.mipmaps = [];\n    _this.mapping = mapping;\n    _this.wrapS = wrapS;\n    _this.wrapT = wrapT;\n    _this.magFilter = magFilter;\n    _this.minFilter = minFilter;\n    _this.anisotropy = anisotropy;\n    _this.format = format;\n    _this.internalFormat = null;\n    _this.type = type;\n    _this.offset = new Vector2(0, 0);\n    _this.repeat = new Vector2(1, 1);\n    _this.center = new Vector2(0, 0);\n    _this.rotation = 0;\n    _this.matrixAutoUpdate = true;\n    _this.matrix = new Matrix3();\n    _this.generateMipmaps = true;\n    _this.premultiplyAlpha = false;\n    _this.flipY = true;\n    _this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    _this.encoding = encoding;\n    _this.userData = {};\n    _this.version = 0;\n    _this.onUpdate = null;\n    _this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\n    _this.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n    return _this;\n  }\n\n  _createClass(Texture, [{\n    key: \"image\",\n    get: function get() {\n      return this.source.data;\n    },\n    set: function set(value) {\n      this.source.data = value;\n    }\n  }, {\n    key: \"updateMatrix\",\n    value: function updateMatrix() {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.name = source.name;\n      this.source = source.source;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.internalFormat = source.internalFormat;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      this.needsUpdate = true;\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        image: this.source.toJSON(meta).uuid,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n      if (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  }, {\n    key: \"transformUv\",\n    value: function transformUv(uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  }, {\n    key: \"needsUpdate\",\n    set: function set(value) {\n      if (value === true) {\n        this.version++;\n        this.source.needsUpdate = true;\n      }\n    }\n  }]);\n\n  return Texture;\n}(EventDispatcher);\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.prototype.isTexture = true;\nexport { Texture };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three/src/textures/Texture.js"],"names":["EventDispatcher","MirroredRepeatWrapping","ClampToEdgeWrapping","RepeatWrapping","LinearEncoding","UnsignedByteType","RGBAFormat","LinearMipmapLinearFilter","LinearFilter","UVMapping","MathUtils","Vector2","Matrix3","Source","textureId","Texture","image","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","Object","defineProperty","value","uuid","generateUUID","name","source","mipmaps","internalFormat","offset","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","version","onUpdate","isRenderTargetTexture","needsPMREMUpdate","data","setUvTransform","x","y","constructor","copy","slice","JSON","parse","stringify","needsUpdate","meta","isRootObject","undefined","textures","output","metadata","generator","toJSON","wrap","dispatchEvent","uv","applyMatrix3","Math","floor","abs","ceil","prototype","isTexture"],"mappings":"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","sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Source } from './Source.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nexport { Texture };\n"]},"metadata":{},"sourceType":"module"}