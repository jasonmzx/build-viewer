{"ast":null,"code":"import _classCallCheck from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\nvar _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nvar _rgb = {\n  r: 0,\n  g: 0,\n  b: 0\n};\nvar _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nvar _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\n\nfunction toComponents(source, target) {\n  target.r = source.r;\n  target.g = source.g;\n  target.b = source.b;\n  return target;\n}\n\nvar Color = /*#__PURE__*/function () {\n  function Color(r, g, b) {\n    _classCallCheck(this, Color);\n\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  _createClass(Color, [{\n    key: \"set\",\n    value: function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n  }, {\n    key: \"setHex\",\n    value: function setHex(hex) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setRGB\",\n    value: function setRGB(r, g, b) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setHSL\",\n    value: function setHSL(h, s, l) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n      h = euclideanModulo(h, 1);\n      s = clamp(s, 0, 1);\n      l = clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              ColorManagement.toWorkingColorSpace(this, colorSpace);\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[4]);\n              return this.setHSL(h, s, l, colorSpace);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          ColorManagement.toWorkingColorSpace(this, colorSpace);\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        return this.setColorName(style, colorSpace);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setColorName\",\n    value: function setColorName(style) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n\n      // color keywords\n      var hex = _colorKeywords[style.toLowerCase()];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex, colorSpace);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n  }, {\n    key: \"copySRGBToLinear\",\n    value: function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n  }, {\n    key: \"copyLinearToSRGB\",\n    value: function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n  }, {\n    key: \"convertSRGBToLinear\",\n    value: function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n  }, {\n    key: \"convertLinearToSRGB\",\n    value: function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n  }, {\n    key: \"getHex\",\n    value: function getHex() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      return clamp(_rgb.r * 255, 0, 255) << 16 ^ clamp(_rgb.g * 255, 0, 255) << 8 ^ clamp(_rgb.b * 255, 0, 255) << 0;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      return ('000000' + this.getHex(colorSpace).toString(16)).slice(-6);\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      // h,s,l ranges are in 0.0 - 1.0\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      var r = _rgb.r,\n          g = _rgb.g,\n          b = _rgb.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n  }, {\n    key: \"getRGB\",\n    value: function getRGB(target) {\n      var colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LinearSRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n      target.r = _rgb.r;\n      target.g = _rgb.g;\n      target.b = _rgb.b;\n      return target;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      var colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n      ColorManagement.fromWorkingColorSpace(toComponents(this, _rgb), colorSpace);\n\n      if (colorSpace !== SRGBColorSpace) {\n        // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n        return \"color(\".concat(colorSpace, \" \").concat(_rgb.r, \" \").concat(_rgb.g, \" \").concat(_rgb.b, \")\");\n      }\n\n      return \"rgb(\".concat(_rgb.r * 255 | 0, \",\").concat(_rgb.g * 255 | 0, \",\").concat(_rgb.b * 255 | 0, \")\");\n    }\n  }, {\n    key: \"offsetHSL\",\n    value: function offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n  }, {\n    key: \"addColors\",\n    value: function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpColors\",\n    value: function lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpHSL\",\n    value: function lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      var h = lerp(_hslA.h, _hslB.h, alpha);\n      var s = lerp(_hslA.s, _hslB.s, alpha);\n      var l = lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n\n      if (attribute.normalized === true) {\n        // assuming Uint8Array\n        this.r /= 255;\n        this.g /= 255;\n        this.b /= 255;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getHex();\n    }\n  }]);\n\n  return Color;\n}();\n\nColor.NAMES = _colorKeywords;\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\nexport { Color, SRGBToLinear };","map":{"version":3,"sources":["C:/Users/jason/Documents/GitHub/build-viewer/frontend/node_modules/three/src/math/Color.js"],"names":["clamp","euclideanModulo","lerp","ColorManagement","SRGBToLinear","LinearToSRGB","SRGBColorSpace","LinearSRGBColorSpace","_colorKeywords","_rgb","r","g","b","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","toComponents","source","target","Color","undefined","set","setRGB","value","isColor","copy","setHex","setStyle","scalar","hex","colorSpace","Math","floor","toWorkingColorSpace","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","name","components","min","parseInt","setHSL","size","length","charAt","setColorName","toLowerCase","constructor","copySRGBToLinear","copyLinearToSRGB","fromWorkingColorSpace","getHex","toString","slice","max","hue","saturation","lightness","delta","getHSL","color1","color2","alpha","c","array","offset","attribute","index","getX","getY","getZ","normalized","NAMES","prototype"],"mappings":"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","sourcesContent":["import { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace, LinearSRGBColorSpace } from '../constants.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nexport { Color, SRGBToLinear };\n"]},"metadata":{},"sourceType":"module"}